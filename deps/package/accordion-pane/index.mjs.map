{"version":3,"file":"/Users/mwistrand/projects/dojo/widgets/src/accordion-pane/index.ts","sourceRoot":"","sources":["../node_modules/tslint-loader/index.js??ref--4!/Users/mwistrand/projects/dojo/widgets/node_modules/@dojo/webpack-contrib/css-module-dts-loader/index.js?type=ts&instanceName=0_custom-elements!/Users/mwistrand/projects/dojo/widgets/src/accordion-pane/index.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,6BAA6B,CAAC;AAErD,OAAO,EAAE,aAAa,EAAE,MAAM,sDAAsD,CAAC;AACrF,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AACtD,OAAO,EAAE,WAAW,EAAoB,KAAK,EAAE,MAAM,2CAA2C,CAAC;AACjG,OAAO,EAAE,CAAC,EAAE,MAAM,+BAA+B,CAAC;AAClD,OAAO,EAAE,UAAU,EAAE,MAAM,wCAAwC,CAAC;AAGpE,OAAO,KAAK,GAAG,MAAM,+BAA+B,CAAC;AAuBrD,IAAa,aAAa,GAA1B,mBAA2B,SAAQ,WAAW,CAAC,UAAU,CAGxD;IACQ,eAAe,CACtB,KAAuB,EACvB,YAAgD,EAChD,QAA+B;QAE/B,MAAM,gBAAgB,GAAG,KAAK,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACxD,MAAM,QAAQ,GAAG,GAAG,EAAE;YACrB,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,CAAC;QAChD,CAAC,CAAC;QAEF,MAAM,CAAC,gBAAgB;YACtB,CAAC,CAAC,CAAC,GAAW,EAAE,EAAE;gBAChB,gBAAgB,CAAC,GAAG,CAAC,CAAC;gBACtB,QAAQ,EAAE,CAAC;YACX,CAAC;YACH,CAAC,CAAC,QAAQ,CAAC;IACb,CAAC;IAES,cAAc,CAAC,GAAW;QACnC,MAAM,EAAE,cAAc,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;QAC3C,cAAc,IAAI,cAAc,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC;IAES,aAAa,CAAC,GAAW;QAClC,MAAM,EAAE,aAAa,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;QAC1C,aAAa,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC;IACrC,CAAC;IAES,cAAc;QACvB,MAAM,EAAE,QAAQ,GAAG,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;QAE1D,MAAM,CAAC,IAAI,CAAC,QAAQ;aAClB,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC;aACxB,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;YACd,mEAAmE;YACnE,MAAM,CAAC,KAAM,CAAC,UAAU,EAAE;gBACzB,cAAc,EAAE,IAAI,CAAC,eAAe,CACnC,KAAM,EACN,gBAAgB,EAChB,IAAI,CAAC,cAAc,CACnB;gBACD,aAAa,EAAE,IAAI,CAAC,eAAe,CAClC,KAAM,EACN,eAAe,EACf,IAAI,CAAC,aAAa,CAClB;gBACD,IAAI,EAAE,QAAQ,CAAC,QAAQ,EAAE,KAAM,CAAC,UAAU,CAAC,GAAG,CAAC;gBAC/C,KAAK;gBACL,OAAO;aACP,CAAC,CAAC;YAEH,MAAM,CAAC,KAAK,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IAES,MAAM;QACf,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;IAC3E,CAAC;CACD,CAAA;AA9DY,aAAa;IANzB,KAAK,CAAC,GAAG,CAAC;IACV,aAAa,CAA0B;QACvC,GAAG,EAAE,qBAAqB;QAC1B,UAAU,EAAE,CAAC,UAAU,EAAE,OAAO,EAAE,cAAc,EAAE,SAAS,CAAC;QAC5D,MAAM,EAAE,CAAC,gBAAgB,EAAE,eAAe,CAAC;KAC3C,CAAC;GACW,aAAa,CA8DzB;SA9DY,aAAa;AAgE1B,eAAe,aAAa,CAAC","sourcesContent":["import { assign } from '@dojo/framework/shim/object';\nimport { DNode, WNode } from '@dojo/framework/widget-core/interfaces';\nimport { customElement } from '@dojo/framework/widget-core/decorators/customElement';\nimport { includes } from '@dojo/framework/shim/array';\nimport { ThemedMixin, ThemedProperties, theme } from '@dojo/framework/widget-core/mixins/Themed';\nimport { v } from '@dojo/framework/widget-core/d';\nimport { WidgetBase } from '@dojo/framework/widget-core/WidgetBase';\n\nimport TitlePane from '../title-pane/index';\nimport * as css from '../theme/accordion-pane.m.css';\n\n/**\n * @type AccordionPaneProperties\n *\n * Properties that can be set on AccordionPane components\n *\n * @property onRequestClose   Called when the title of an open pane is clicked\n * @property onRequestOpen    Called when the title of a closed pane is clicked\n * @property openKeys         Array of TitlePane keys indicating which panes should be open\n */\nexport interface AccordionPaneProperties extends ThemedProperties {\n\tonRequestClose?(key: string): void;\n\tonRequestOpen?(key: string): void;\n\topenKeys?: string[];\n}\n\n@theme(css)\n@customElement<AccordionPaneProperties>({\n\ttag: 'dojo-accordion-pane',\n\tproperties: ['openKeys', 'theme', 'extraClasses', 'classes'],\n\tevents: ['onRequestClose', 'onRequestOpen']\n})\nexport class AccordionPane extends ThemedMixin(WidgetBase)<\n\tAccordionPaneProperties,\n\tWNode<TitlePane>\n> {\n\tprivate _assignCallback(\n\t\tchild: WNode<TitlePane>,\n\t\tfunctionName: 'onRequestClose' | 'onRequestOpen',\n\t\tcallback: (key: string) => void\n\t) {\n\t\tconst existingProperty = child.properties[functionName];\n\t\tconst property = () => {\n\t\t\tcallback.call(this, `${child.properties.key}`);\n\t\t};\n\n\t\treturn existingProperty\n\t\t\t? (key: string) => {\n\t\t\t\t\texistingProperty(key);\n\t\t\t\t\tproperty();\n\t\t\t  }\n\t\t\t: property;\n\t}\n\n\tprotected onRequestClose(key: string) {\n\t\tconst { onRequestClose } = this.properties;\n\t\tonRequestClose && onRequestClose(key);\n\t}\n\n\tprotected onRequestOpen(key: string) {\n\t\tconst { onRequestOpen } = this.properties;\n\t\tonRequestOpen && onRequestOpen(key);\n\t}\n\n\tprotected renderChildren(): DNode[] {\n\t\tconst { openKeys = [], theme, classes } = this.properties;\n\n\t\treturn this.children\n\t\t\t.filter((child) => child)\n\t\t\t.map((child) => {\n\t\t\t\t// null checks skipped since children are filtered prior to mapping\n\t\t\t\tassign(child!.properties, {\n\t\t\t\t\tonRequestClose: this._assignCallback(\n\t\t\t\t\t\tchild!,\n\t\t\t\t\t\t'onRequestClose',\n\t\t\t\t\t\tthis.onRequestClose\n\t\t\t\t\t),\n\t\t\t\t\tonRequestOpen: this._assignCallback(\n\t\t\t\t\t\tchild!,\n\t\t\t\t\t\t'onRequestOpen',\n\t\t\t\t\t\tthis.onRequestOpen\n\t\t\t\t\t),\n\t\t\t\t\topen: includes(openKeys, child!.properties.key),\n\t\t\t\t\ttheme,\n\t\t\t\t\tclasses\n\t\t\t\t});\n\n\t\t\t\treturn child;\n\t\t\t});\n\t}\n\n\tprotected render(): DNode {\n\t\treturn v('div', { classes: this.theme(css.root) }, this.renderChildren());\n\t}\n}\n\nexport default AccordionPane;\n"]}