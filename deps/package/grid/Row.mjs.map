{"version":3,"file":"/Users/mwistrand/projects/dojo/widgets/src/grid/Row.ts","sourceRoot":"","sources":["../node_modules/tslint-loader/index.js??ref--4!/Users/mwistrand/projects/dojo/widgets/node_modules/@dojo/webpack-contrib/css-module-dts-loader/index.js?type=ts&instanceName=0_custom-elements!/Users/mwistrand/projects/dojo/widgets/src/grid/Row.ts"],"names":[],"mappings":";AAAA,OAAO,UAAU,MAAM,wCAAwC,CAAC;AAChE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,+BAA+B,CAAC;AAErD,OAAO,WAAW,EAAE,EAAE,KAAK,EAAE,MAAM,2CAA2C,CAAC;AAG/E,OAAO,IAAI,MAAM,QAAQ,CAAC;AAC1B,OAAO,KAAK,QAAQ,MAAM,oBAAoB,CAAC;AAC/C,OAAO,KAAK,GAAG,MAAM,yBAAyB,CAAC;AAU/C,IAAqB,GAAG,GAAxB,SAAyB,SAAQ,WAAW,CAAC,UAAU,CAAgB;IAC5D,MAAM;QACf,MAAM,EAAE,IAAI,EAAE,YAAY,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;QACnE,IAAI,OAAO,GAAG,YAAY,CAAC,GAAG,CAC7B,CAAC,MAAM,EAAE,EAAE;YACV,IAAI,KAAK,GAAmB,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC;YACjD,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACrB,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;YACpC,CAAC;YACD,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE;gBACd,KAAK;gBACL,GAAG,EAAE,MAAM,CAAC,EAAE;gBACd,OAAO;gBACP,OAAO,EAAE,CAAC,YAAoB,EAAE,EAAE;oBACjC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;gBACtD,CAAC;gBACD,KAAK;gBACL,QAAQ,EAAE,MAAM,CAAC,QAAQ;gBACzB,QAAQ,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;aAC9B,CAAC,CAAC;QACJ,CAAC,EACD,EAAa,CACb,CAAC;QAEF,MAAM,CAAC,CAAC,CACP,KAAK,EACL;YACC,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,SAAS,CAAC;YACnD,IAAI,EAAE,KAAK;YACX,eAAe,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;SAC5B,EACD,OAAO,CACP,CAAC;IACH,CAAC;CACD,CAAA;AAlCoB,GAAG;IADvB,KAAK,CAAC,GAAG,CAAC;GACU,GAAG,CAkCvB;eAlCoB,GAAG","sourcesContent":["import WidgetBase from '@dojo/framework/widget-core/WidgetBase';\nimport { v, w } from '@dojo/framework/widget-core/d';\nimport { DNode } from '@dojo/framework/widget-core/interfaces';\nimport ThemedMixin, { theme } from '@dojo/framework/widget-core/mixins/Themed';\n\nimport { ColumnConfig } from './interfaces';\nimport Cell from './Cell';\nimport * as fixedCss from './styles/row.m.css';\nimport * as css from '../theme/grid-row.m.css';\n\nexport interface RowProperties {\n\tid: number;\n\titem: { [index: string]: any };\n\tcolumnConfig: ColumnConfig[];\n\tupdater: (rowNumber: number, columnId: string, value: any) => void;\n}\n\n@theme(css)\nexport default class Row extends ThemedMixin(WidgetBase)<RowProperties> {\n\tprotected render(): DNode {\n\t\tconst { item, columnConfig, id, theme, classes } = this.properties;\n\t\tlet columns = columnConfig.map(\n\t\t\t(config) => {\n\t\t\t\tlet value: string | DNode = `${item[config.id]}`;\n\t\t\t\tif (config.renderer) {\n\t\t\t\t\tvalue = config.renderer({ value });\n\t\t\t\t}\n\t\t\t\treturn w(Cell, {\n\t\t\t\t\ttheme,\n\t\t\t\t\tkey: config.id,\n\t\t\t\t\tclasses,\n\t\t\t\t\tupdater: (updatedValue: string) => {\n\t\t\t\t\t\tthis.properties.updater(id, config.id, updatedValue);\n\t\t\t\t\t},\n\t\t\t\t\tvalue,\n\t\t\t\t\teditable: config.editable,\n\t\t\t\t\trawValue: `${item[config.id]}`\n\t\t\t\t});\n\t\t\t},\n\t\t\t[] as DNode[]\n\t\t);\n\n\t\treturn v(\n\t\t\t'div',\n\t\t\t{\n\t\t\t\tclasses: [this.theme(css.root), fixedCss.rootFixed],\n\t\t\t\trole: 'row',\n\t\t\t\t'aria-rowindex': `${id + 1}`\n\t\t\t},\n\t\t\tcolumns\n\t\t);\n\t}\n}\n"]}