{"version":3,"file":"/Users/mwistrand/projects/dojo/widgets/src/icon/index.ts","sourceRoot":"","sources":["../node_modules/tslint-loader/index.js??ref--4!/Users/mwistrand/projects/dojo/widgets/node_modules/@dojo/webpack-contrib/css-module-dts-loader/index.js?type=ts&instanceName=0_custom-elements!/Users/mwistrand/projects/dojo/widgets/src/icon/index.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,wCAAwC,CAAC;AAEpE,OAAO,EAAE,WAAW,EAAoB,KAAK,EAAE,MAAM,2CAA2C,CAAC;AACjG,OAAO,EAAE,CAAC,EAAE,MAAM,+BAA+B,CAAC;AAElD,OAAO,EAAE,oBAAoB,EAAE,MAAM,gBAAgB,CAAC;AACtD,OAAO,KAAK,GAAG,MAAM,qBAAqB,CAAC;AAC3C,OAAO,KAAK,OAAO,MAAM,6BAA6B,CAAC;AACvD,OAAO,EAAE,aAAa,EAAE,MAAM,sDAAsD,CAAC;AAuBrF,IAAa,IAAI,GAAjB,UAAkB,SAAQ,WAAW,CAAC,UAAU,CAAiB;IACtD,aAAa,CAAC,OAAe;QACtC,MAAM,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;IACpE,CAAC;IAED,MAAM;QACL,MAAM,EACL,IAAI,GAAG;YACN,MAAM,EAAE,MAAM;SACd,EACD,IAAI,EACJ,OAAO,EACP,GAAG,IAAI,CAAC,UAAU,CAAC;QAEpB,MAAM,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE;YACnD,CAAC,CAAC,GAAG,oBACD,oBAAoB,CAAC,IAAI,CAAC,IAC7B,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IACzC;YACF,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI;SAC5C,CAAC,CAAC;IACJ,CAAC;CACD,CAAA;AAtBY,IAAI;IANhB,KAAK,CAAC,GAAG,CAAC;IACV,aAAa,CAAiB;QAC9B,GAAG,EAAE,WAAW;QAChB,UAAU,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,cAAc,CAAC;QACxD,UAAU,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;KAC/B,CAAC;GACW,IAAI,CAsBhB;SAtBY,IAAI;AAwBjB,eAAe,IAAI,CAAC","sourcesContent":["import { WidgetBase } from '@dojo/framework/widget-core/WidgetBase';\nimport { DNode } from '@dojo/framework/widget-core/interfaces';\nimport { ThemedMixin, ThemedProperties, theme } from '@dojo/framework/widget-core/mixins/Themed';\nimport { v } from '@dojo/framework/widget-core/d';\nimport { CustomAriaProperties } from '../common/interfaces';\nimport { formatAriaProperties } from '../common/util';\nimport * as css from '../theme/icon.m.css';\nimport * as baseCss from '../common/styles/base.m.css';\nimport { customElement } from '@dojo/framework/widget-core/decorators/customElement';\n\nexport type IconType = keyof typeof css;\n\n/**\n * @type IconProperties\n *\n * Properties that can be set on an Icon component\n *\n * @property type           Icon type, e.g. downIcon, searchIcon, etc.\n * @property altText        An optional, visually hidden label for the icon\n */\nexport interface IconProperties extends ThemedProperties, CustomAriaProperties {\n\ttype: IconType;\n\taltText?: string;\n}\n\n@theme(css)\n@customElement<IconProperties>({\n\ttag: 'dojo-icon',\n\tproperties: ['theme', 'classes', 'aria', 'extraClasses'],\n\tattributes: ['type', 'altText']\n})\nexport class Icon extends ThemedMixin(WidgetBase)<IconProperties> {\n\tprotected renderAltText(altText: string): DNode {\n\t\treturn v('span', { classes: [baseCss.visuallyHidden] }, [altText]);\n\t}\n\n\trender(): DNode {\n\t\tconst {\n\t\t\taria = {\n\t\t\t\thidden: 'true'\n\t\t\t},\n\t\t\ttype,\n\t\t\taltText\n\t\t} = this.properties;\n\n\t\treturn v('span', { classes: this.theme(css.root) }, [\n\t\t\tv('i', {\n\t\t\t\t...formatAriaProperties(aria),\n\t\t\t\tclasses: this.theme([css.icon, css[type]])\n\t\t\t}),\n\t\t\taltText ? this.renderAltText(altText) : null\n\t\t]);\n\t}\n}\n\nexport default Icon;\n"]}